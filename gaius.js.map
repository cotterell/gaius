{"version":3,"sources":["../src/gaius.js"],"names":["map","items","f","yielding","item","exports","Monad","value","isPrimitive","Object","isIterable","Symbol","iterator","bind","filter","values","partial","args","supplied","Range","start","stop","step","undefined"],"mappings":"mpEAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,CAGC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAMA,CAAAA,GAAG,sCAAG,iBAAWC,KAAX,CAAkBC,CAAlB,0IACNA,CAAC,EAAI,IADC,yBAER,8BAAOC,QAAQ,CAACF,KAAD,CAAf,SAFQ,0EAIKA,KAJL,6FAIHG,IAJG,8BAKN,MAAMF,CAAAA,CAAC,CAACE,IAAD,CAAP,CALM,4RAAH,CAAT,CAQG;AAEHC,OAAO,CAACL,GAAR,CAAcA,GAAd,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAMM,CAAAA,KAAK,CAAG,iBAASC,KAAT,CAAgB,gBAE5B,GAAI,kDAAJ,CAAiB,CACf,MAAO,IAAID,CAAAA,KAAJ,CAAUC,KAAV,CACR,CAAC;AAEF,GAAIA,KAAK,WAAYD,CAAAA,KAArB,CAA4B,CAC1B,KAAKC,KAAL,CAAaA,KAAK,CAACA,KACpB,CAFD,IAEO,CACL,KAAKA,KAAL,CAAaA,KACd,CAAC;AAEF,KAAKC,WAAL,CAAmBD,KAAK,GAAKE,MAAM,CAACF,KAAD,CAAnC,CACA,KAAKG,UAAL,CAAkB,CAAC,KAAKF,WAAN,EAAsBG,MAAM,CAACC,QAAP,GAAmBL,CAAAA,KAA3D,CAEA;AACF;AACA;AACA;AACA;AACA,KACE,KAAKM,IAAL,CAAY,SAACX,CAAD,QAAOA,CAAAA,CAAC,CAAC,KAAI,CAACK,KAAN,CAAR,CAAZ,CAEA,KAAKP,GAAL,CAAW,SAACE,CAAD,CAAO,CAChB,GAAI,KAAI,CAACQ,UAAT,CAAqB,CACnB,MAAO,CAAA,KAAI,CAACG,IAAL,CAAU,SAAAN,KAAK,QAAID,CAAAA,KAAK,CAACD,OAAO,CAACL,GAAR,CAAYO,KAAZ,CAAmBL,CAAnB,CAAD,CAAT,CAAf,CACR,CAFD,IAEO,CACL,MAAO,CAAA,KAAI,CAACW,IAAL,CAAU,SAAAN,KAAK,QAAID,CAAAA,KAAK,CAACJ,CAAC,CAACK,KAAD,CAAF,CAAT,CAAf,CACR,CAAC;AACH,CAND,CAMG;AAEH,GAAI,KAAKG,UAAT,CAAqB,CACnB,KAAKI,MAAL,CAAc,SAACZ,CAAD,CAAO,CACnB,GAAMY,CAAAA,MAAM,sCAAG,kBAAWC,MAAX,iLACCA,MADD,kGACRR,KADQ,kBAEPL,CAAC,CAACK,KAAD,CAFM,0CAGT,MAAMA,CAAAA,KAAN,CAHS,uSAAH,CAAZ,CAMG;AACH,MAAO,CAAA,KAAI,CAACM,IAAL,CAAU,SAAAN,KAAK,QAAID,CAAAA,KAAK,CAACQ,MAAM,CAACP,KAAD,CAAP,CAAT,CAAf,CACR,CACF,CAAC;AAEH,CA5CD,CA4CG;AAEHF,OAAO,CAACC,KAAR,CAAgBA,KAAhB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAMU,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAUd,CAAV,CAAsB,+BAANe,IAAM,qDAANA,IAAM,yBACpC,MAAO,2CAAIC,QAAJ,+CAAIA,QAAJ,+BAAiBhB,CAAAA,CAAC,MAAD,QAAKe,IAAL,QAAcC,QAAd,EAAjB,CACR,CAFD,CAEG;AAEHb,OAAO,CAACW,OAAR,CAAkBA,OAAlB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAMG,CAAAA,KAAK,CAAG,kBAASC,KAAT,CAAgBC,IAAhB,CAAwC,IAAlBC,CAAAA,IAAkB,2DAAXC,SAAW,CAEpD,GAAI,mDAAJ,CAAiB,CACf,MAAO,IAAIJ,CAAAA,KAAJ,CAAUC,KAAV,CAAiBC,IAAjB,CAAuBC,IAAvB,CACR,CAAC;AAEF,KAAKF,KAAL,CAAaC,IAAI,GAAKE,SAAT,CAAqB,CAArB,CAAyBH,KAAtC,CACA,KAAKC,IAAL,CAAYA,IAAI,GAAKE,SAAT,CAAqBH,KAArB,CAA6BC,IAAzC,CACA,KAAKC,IAAL,CAAYA,IAAI,GAAKC,SAAT,CAAqB,CAArB,CAAyBD,IAArC,CAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KACE,KAAKP,MAAL,sCAAc,iJACRR,KADQ,CACA,KAAKa,KADL,aAELb,KAAK,CAAG,KAAKc,IAFR,2CAGV,MAAMd,CAAAA,KAAN,CAHU,OAIVA,KAAK,EAAI,KAAKe,IAAd,CAJU,mFAAd,EAME;AAEF,KAAKX,MAAM,CAACC,QAAZ,EAAwB,KAAKG,MAA7B,CAEA;AACA;AACA;AAED,CAjCD,CAiCG;AAEHV,OAAO,CAACc,KAAR,CAAgBA,KAAhB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAMhB,CAAAA,QAAQ,sCAAG,kBAAWF,KAAX,0HACXU,MAAM,CAACC,QAAP,GAAmBX,CAAAA,KADR,0BAEb,+BAAOA,KAAP,SAFa,0CAIP,uBAJO,wDAAH,CAAd,CAMG;AAEHI,OAAO,CAACF,QAAR,CAAmBA,QAAnB","sourcesContent":["/**\n * **Gaius** is a library for fast functional programming.\n *\n * [![github](https://img.shields.io/badge/github-cotterell%2Fgaius-blue?style=flat&logo=github)](https://github.com/cotterell/gaius)\n * @module gaius\n * @example\n * const gaius = require('gaius');\n */\n\n\n /**\n * Return a _one-use_ generator that yields `f(item)` for each `item` of `items`.\n * One-use: the returned generator object is a one use or temporary object.\n * @generator\n * @function\n * @param {Iterable} items items to use\n * @param {Function} f mapping function\n * @returns {Generator}\n * @yields `f(item)` for each `item` of `items`\n */\nconst map = function* (items, f) {\n  if (f == null) {\n    yield* yielding(items);\n  } else {\n    for (item of items) {\n      yield f(item);\n    } // for\n  } // if\n}; // map\n\nexports.map = map;\n\n/**\n * Return a monad.\n *\n * 1. `M(x).bind(f).value == f(x).value`\n * 2. `M(x).bind(Monad).value == M(x).value`\n * 3. `M(x).bind(f).bind(g).value == M(x).bind(x => f(x).bind(g)).value`\n * @kind class\n * @namespace Monad\n * @constructor\n * @param {*} value the monadic value\n */\nconst Monad = function(value) {\n\n  if (!new.target) {\n    return new Monad(value);\n  } // if\n\n  if (value instanceof Monad) {\n    this.value = value.value;\n  } else {\n    this.value = value;\n  } // if\n\n  this.isPrimitive = value !== Object(value);\n  this.isIterable = !this.isPrimitive && (Symbol.iterator in value)\n\n  /**\n  *\n   * @function\n   * @param {function} f a monadic function\n   * @returns {Monad|*}\n   */\n  this.bind = (f) => f(this.value);\n\n  this.map = (f) => {\n    if (this.isIterable) {\n      return this.bind(value => Monad(exports.map(value, f)));\n    } else {\n      return this.bind(value => Monad(f(value)));\n    } // if\n  }; // map\n\n  if (this.isIterable) {\n    this.filter = (f) => {\n      const filter = function* (values) {\n        for (value of values) {\n          if (f(value)) {\n            yield value;\n          } // if\n        } // for\n      }; // filtered\n      return this.bind(value => Monad(filter(value)));\n    };\n  } // if\n\n}; // Monad\n\nexports.Monad = Monad;\n\n/**\n * Return a partial function that behaves like `f` called with the provided\n * `args`. If any arguments are supplied in a call to the partial function, then\n * they will immediately follow `args` in the call to `f`. If you let `g`\n * denote a partial function of `f`, then a call to `g(...supplied)` will return\n * `f(...args, ...supplied)`.\n * @function\n * @example <caption>The following two line are equivalent:</caption>\n * const log = gaius.partial(console.log, '[gaius]');\n * const log = (...supplied) => console.log('[gaius]', ...supplied);\n * @param {Function} f function to partially apply\n * @param {...*} args arguments to provide for partial application\n * @returns {Function} `(...supplied) => f(...args, ...supplied)`\n */\nconst partial = function (f, ...args) {\n  return (...supplied) => f(...args, ...supplied);\n}; // partial\n\nexports.partial = partial;\n\n/**\n * Represents an arithmetic progression of numbers in a specified range.\n * @kind class\n * @namespace Range\n * @constructor\n * @param {number} [start=0]\n * @param {number} stop\n * @param {number} [step=1]\n * @example <caption>Just like the {@link Array} class, `Range` is directly callable without using the `new` keyword.</caption>\n * Range(10) // new Range(10)\n * @example <caption>Every `Range` object is iterable:</caption>\n * const Range = gaius.Range;\n * @example\n * Array.from(Range(3));    // [0, 1, 2]\n * Array.from(Range(3, 6)); // [3, 4, 5]\n * @example\n * for (num of Range(10)) console.log(num);\n */\nconst Range = function(start, stop, step = undefined) {\n\n  if (!new.target) {\n    return new Range(start, stop, step);\n  } // if\n\n  this.start = stop === undefined ? 0 : start;\n  this.stop = stop === undefined ? start : stop;\n  this.step = step === undefined ? 1 : step;\n\n  /**\n   * Return a _one-use_ generator that yields each number in the range.\n   * One-use: the returned generator object is a one use or temporary object.\n   * @instance\n   * @memberof Range\n   * @generator\n   * @returns {Generator} `start`, `start+step`, `...`, `stop`\n   *          (**excluding** `stop`)\n   */\n  this.values = function* () {\n    let value = this.start;\n    while (value < this.stop) {\n      yield value;\n      value += this.step;\n    } // while\n  } // values\n\n  this[Symbol.iterator] = this.values;\n\n  //get this[Symbol.toStringTag]() {\n  //  return `range(${this.start}, ${this.stop}, ${this.step})`;\n  //} // toStringTag\n\n}; // range\n\nexports.Range = Range;\n\n/**\n * Return a _one-use_ generator that yields each item of `items`.\n * One-use: the returned generator object is a one use or temporary object.\n * @generator\n * @function\n * @param {Iterable} items\n * @returns {Generator}\n * @yields each item of `items`\n */\nconst yielding = function* (items) {\n  if (Symbol.iterator in items) {\n    yield *items;\n  } else {\n    throw 'items is not iterable';\n  } // if\n}; // yielding\n\nexports.yielding = yielding;\n"],"file":"gaius.js"}